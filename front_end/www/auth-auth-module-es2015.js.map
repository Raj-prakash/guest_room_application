{"version":3,"sources":["./src/app/auth/auth.page.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.scss","./src/app/auth/auth.page.ts","./src/app/auth/auth.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"<ion-content style=\\\"overflow: hidden\\\">\\n  <form\\n    [formGroup]=\\\"loginForm\\\"\\n    (ngSubmit)=\\\"checkLogin()\\\"\\n    *ngIf=\\\"isRegistered; else notRegistered\\\"\\n  >\\n    <ion-card style=\\\"margin-top: 25vh; margin-bottom: 25vh\\\">\\n      <ion-card>\\n        <ion-card-content>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email Address</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" required></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\n            <ion-input\\n              type=\\\"password\\\"\\n              formControlName=\\\"password\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n\\n      <ion-button\\n        expand=\\\"full\\\"\\n        size=\\\"large\\\"\\n        fill=\\\"solid\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"!loginForm.valid\\\"\\n        >Sign in</ion-button\\n      >\\n      <p style=\\\"text-align: center\\\" (click)=\\\"toRegister()\\\">\\n        <u>Go to register!</u>\\n      </p>\\n    </ion-card>\\n  </form>\\n  <ng-template #notRegistered>\\n    <form\\n      [formGroup]=\\\"registerForm\\\"\\n      (ngSubmit)=\\\"checkRegister()\\\"\\n      enctype=\\\"multipart/form-data\\\"\\n    >\\n      <ion-card style=\\\"margin-top: 15vh; margin-bottom: 15vh\\\">\\n        <ion-card>\\n          <ion-card-content>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">User Name</ion-label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                formControlName=\\\"userName\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Email Address</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                formControlName=\\\"email\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                formControlName=\\\"password\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card>\\n\\n        <ion-card>\\n          <ion-card-header> Profile Photo </ion-card-header>\\n          <ion-card-content>\\n            <ion-input\\n              (change)=\\\"setImages($event)\\\"\\n              type=\\\"file\\\"\\n              id=\\\"inputGroupFile01\\\"\\n              aria-describedby=\\\"inputGroupFileAddon01\\\"\\n              required\\n            ></ion-input>\\n          </ion-card-content>\\n        </ion-card>\\n\\n        <ion-button\\n          expand=\\\"full\\\"\\n          size=\\\"large\\\"\\n          fill=\\\"solid\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"!registerForm.valid\\\"\\n          >Sign up</ion-button\\n        >\\n        <p style=\\\"text-align: center\\\" (click)=\\\"toLogin()\\\">\\n          <u>Go to login!</u>\\n        </p>\\n      </ion-card>\\n    </form>\\n  </ng-template>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AuthPageRoutingModule } from './auth-routing.module';\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [AuthPage],\n})\nexport class AuthPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Login } from '../types';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.page.html',\r\n  styleUrls: ['./auth.page.scss'],\r\n})\r\nexport class AuthPage {\r\n  private profilePhoto: any;\r\n\r\n  isRegistered: boolean;\r\n  loginForm = this.formBuilder.group({\r\n    email: [''],\r\n    password: [''],\r\n  });\r\n  registerForm = this.formBuilder.group({\r\n    userName: [''],\r\n    email: [''],\r\n    password: [''],\r\n  });\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.isRegistered = false;\r\n  }\r\n\r\n  toRegister() {\r\n    this.isRegistered = false;\r\n  }\r\n\r\n  toLogin() {\r\n    this.isRegistered = true;\r\n  }\r\n\r\n  checkLogin() {\r\n    const loginData: Login = {\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password,\r\n    };\r\n    this.authService.login(loginData);\r\n  }\r\n\r\n  checkRegister() {\r\n    this.authService.register(this.registerForm, this.profilePhoto);\r\n  }\r\n\r\n  setImages(event) {\r\n    if (event.target.files.length > 0) {\r\n      this.profilePhoto = event.target.files;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Login } from '../types';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private httpClient: HttpClient,\n    private cookieService: CookieService,\n    private route: Router\n  ) {}\n\n  register(registerForm: any, profilePhoto: any) {\n    const tempFormData = new FormData();\n    const img = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < profilePhoto.length; i++) {\n      img.push(profilePhoto[i].name);\n      tempFormData.append('images', profilePhoto[i]);\n      tempFormData.append('imagePath', JSON.stringify(img));\n    }\n    console.log(tempFormData);\n    tempFormData.append(\n      'userName',\n      JSON.stringify(registerForm.get('userName').value)\n    );\n    tempFormData.append(\n      'email',\n      JSON.stringify(registerForm.get('email').value)\n    );\n    tempFormData.append(\n      'password',\n      JSON.stringify(registerForm.get('password').value)\n    );\n    this.httpClient\n      .post<{ email; status }>(environment.custom.REGISTER_URL, tempFormData, {\n        observe: 'response',\n      })\n      .subscribe((response) => {\n        if (response.body.status === 'ok') {\n          if (this.cookieService.check('email')) {\n            this.cookieService.deleteAll();\n          }\n          this.cookieService.set('email', response.body.email);\n          this.cookieService.set('isLoggedIn', 'true');\n          this.route.navigate(['/tabs']);\n        } else {\n          // toast\n        }\n      });\n  }\n\n  login(loginData: Login) {\n    this.httpClient\n      .post<{ email; status }>(environment.custom.LOGIN_URL, loginData, {\n        observe: 'response',\n      })\n      .subscribe((response) => {\n        if (response.body.status === 'ok') {\n          if (this.cookieService.check('email')) {\n            this.cookieService.deleteAll();\n          }\n          this.cookieService.set(\n            'email',\n            response.body.email,\n            30000,\n            '',\n            'localhost',\n            false,\n            'Strict'\n          );\n          this.cookieService.set(\n            'isLoggedIn',\n            'true',\n            30000,\n            '',\n            'localhost',\n            false,\n            'Strict'\n          );\n          this.route.navigate(['/tabs']);\n        } else {\n          // toast\n        }\n      });\n  }\n}\n"],"sourceRoot":"webpack:///"}