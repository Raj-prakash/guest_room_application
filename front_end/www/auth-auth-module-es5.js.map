{"version":3,"sources":["src/app/auth/auth.page.html","src/app/auth/auth-routing.module.ts","src/app/auth/auth.module.ts","src/app/auth/auth.page.scss","src/app/auth/auth.page.ts","src/app/auth/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content style=\\\"overflow: hidden\\\">\\n  <form\\n    [formGroup]=\\\"loginForm\\\"\\n    (ngSubmit)=\\\"checkLogin()\\\"\\n    *ngIf=\\\"isRegistered; else notRegistered\\\"\\n  >\\n    <ion-card style=\\\"margin-top: 25vh; margin-bottom: 25vh\\\">\\n      <ion-card>\\n        <ion-card-content>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email Address</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" required></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\n            <ion-input\\n              type=\\\"password\\\"\\n              formControlName=\\\"password\\\"\\n              required\\n            ></ion-input>\\n          </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n\\n      <ion-button\\n        expand=\\\"full\\\"\\n        size=\\\"large\\\"\\n        fill=\\\"solid\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"!loginForm.valid\\\"\\n        >Sign in</ion-button\\n      >\\n      <p style=\\\"text-align: center\\\" (click)=\\\"toRegister()\\\">\\n        <u>Go to register!</u>\\n      </p>\\n    </ion-card>\\n  </form>\\n  <ng-template #notRegistered>\\n    <form\\n      [formGroup]=\\\"registerForm\\\"\\n      (ngSubmit)=\\\"checkRegister()\\\"\\n      enctype=\\\"multipart/form-data\\\"\\n    >\\n      <ion-card style=\\\"margin-top: 15vh; margin-bottom: 15vh\\\">\\n        <ion-card>\\n          <ion-card-content>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">User Name</ion-label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                formControlName=\\\"userName\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Email Address</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                formControlName=\\\"email\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                formControlName=\\\"password\\\"\\n                required\\n              ></ion-input>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card>\\n\\n        <ion-card>\\n          <ion-card-header> Profile Photo </ion-card-header>\\n          <ion-card-content>\\n            <ion-input\\n              (change)=\\\"setImages($event)\\\"\\n              type=\\\"file\\\"\\n              id=\\\"inputGroupFile01\\\"\\n              aria-describedby=\\\"inputGroupFileAddon01\\\"\\n              required\\n            ></ion-input>\\n          </ion-card-content>\\n        </ion-card>\\n\\n        <ion-button\\n          expand=\\\"full\\\"\\n          size=\\\"large\\\"\\n          fill=\\\"solid\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"!registerForm.valid\\\"\\n          >Sign up</ion-button\\n        >\\n        <p style=\\\"text-align: center\\\" (click)=\\\"toLogin()\\\">\\n          <u>Go to login!</u>\\n        </p>\\n      </ion-card>\\n    </form>\\n  </ng-template>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AuthPageRoutingModule } from './auth-routing.module';\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [AuthPage],\n})\nexport class AuthPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Login } from '../types';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.page.html',\r\n  styleUrls: ['./auth.page.scss'],\r\n})\r\nexport class AuthPage {\r\n  private profilePhoto: any;\r\n\r\n  isRegistered: boolean;\r\n  loginForm = this.formBuilder.group({\r\n    email: [''],\r\n    password: [''],\r\n  });\r\n  registerForm = this.formBuilder.group({\r\n    userName: [''],\r\n    email: [''],\r\n    password: [''],\r\n  });\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.isRegistered = false;\r\n  }\r\n\r\n  toRegister() {\r\n    this.isRegistered = false;\r\n  }\r\n\r\n  toLogin() {\r\n    this.isRegistered = true;\r\n  }\r\n\r\n  checkLogin() {\r\n    const loginData: Login = {\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password,\r\n    };\r\n    this.authService.login(loginData);\r\n  }\r\n\r\n  checkRegister() {\r\n    this.authService.register(this.registerForm, this.profilePhoto);\r\n  }\r\n\r\n  setImages(event) {\r\n    if (event.target.files.length > 0) {\r\n      this.profilePhoto = event.target.files;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Login } from '../types';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private httpClient: HttpClient,\n    private cookieService: CookieService,\n    private route: Router\n  ) {}\n\n  register(registerForm: any, profilePhoto: any) {\n    const tempFormData = new FormData();\n    const img = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < profilePhoto.length; i++) {\n      img.push(profilePhoto[i].name);\n      tempFormData.append('images', profilePhoto[i]);\n      tempFormData.append('imagePath', JSON.stringify(img));\n    }\n    console.log(tempFormData);\n    tempFormData.append(\n      'userName',\n      JSON.stringify(registerForm.get('userName').value)\n    );\n    tempFormData.append(\n      'email',\n      JSON.stringify(registerForm.get('email').value)\n    );\n    tempFormData.append(\n      'password',\n      JSON.stringify(registerForm.get('password').value)\n    );\n    this.httpClient\n      .post<{ email; status }>(environment.custom.REGISTER_URL, tempFormData, {\n        observe: 'response',\n      })\n      .subscribe((response) => {\n        if (response.body.status === 'ok') {\n          if (this.cookieService.check('email')) {\n            this.cookieService.deleteAll();\n          }\n          this.cookieService.set('email', response.body.email);\n          this.cookieService.set('isLoggedIn', 'true');\n          this.route.navigate(['/tabs']);\n        } else {\n          // toast\n        }\n      });\n  }\n\n  login(loginData: Login) {\n    this.httpClient\n      .post<{ email; status }>(environment.custom.LOGIN_URL, loginData, {\n        observe: 'response',\n      })\n      .subscribe((response) => {\n        if (response.body.status === 'ok') {\n          if (this.cookieService.check('email')) {\n            this.cookieService.deleteAll();\n          }\n          this.cookieService.set(\n            'email',\n            response.body.email,\n            30000,\n            '',\n            'localhost',\n            false,\n            'Strict'\n          );\n          this.cookieService.set(\n            'isLoggedIn',\n            'true',\n            30000,\n            '',\n            'localhost',\n            false,\n            'Strict'\n          );\n          this.route.navigate(['/tabs']);\n        } else {\n          // toast\n        }\n      });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"auth-auth-module-es5.js"}